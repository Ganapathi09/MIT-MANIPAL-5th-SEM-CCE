


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             RESET, DATA, READONLY
    2 00000000                 EXPORT           __Vectors
    3 00000000         
    4 00000000         __Vectors
    5 00000000 10001000        DCD              0x10001000  ; STACK POINTER VAL
                                                            UE WHEN STACK IS EM
                                                            PTY
    6 00000004 00000000        DCD              Reset_Handler ; RESET VECTOR
    7 00000008         
    8 00000008                 ALIGN
    9 00000008                 AREA             mycode, CODE, READONLY
   10 00000000         ENTRY
   11 00000000                 EXPORT           Reset_Handler
   12 00000000         
   13 00000000         Reset_Handler
   14 00000000         
   15 00000000 480D            LDR              R0, =HEX    ; HEX ADDRESS
   16 00000002 490E            LDR              R1, =ASC    ; ADDRESS OF DESTIN
                                                            ATION WHERE ASCII I
                                                            S STORED
   17 00000004         
   18 00000004 7802            LDRB             R2, [R0]    ; LOAD 1 Byte into 
                                                            R2 in this case 4A 
                                                            
   19 00000006         
   20 00000006 F002 030F       AND              R3, R2, #0x0F ; MASK TO GET A
   21 0000000A         
   22 0000000A 2B09            CMP              R3, #9      ; COMPARE TO CHECK 
                                                            IF DIGIT IS <= 9
   23 0000000C D301            BLO              LESS        ; IF < than 9 then 
                                                            branch to LESS
   24 0000000E F103 0307       ADD              R3, #7      ; ELSE ADD #07 to t
                                                            he Number
   25 00000012         
   26 00000012         LESS
   27 00000012 F103 0330       ADD              R3, #0x30   ; ADD 30 to R3 rega
                                                            rdless
   28 00000016 700B            STRB             R3, [R1]    ; STORE DIGIT in AS
                                                            C
   29 00000018 F101 0104       ADD              R1, #4      ; Increment address
                                                             to store in next 4
                                                            bit address space
   30 0000001C         
   31 0000001C F002 04F0       AND              R4, R2, #0xF0 ; MASK TO GET 4
   32 00000020 EA4F 1414       LSR              R4, #4      ; SHIFT RIGHT BY 4 
                                                            BITS
   33 00000024         
   34 00000024 2C09            CMP              R4, #9
   35 00000026 D301            BLO              LESS2
   36 00000028         
   37 00000028 F103 0307       ADD              R3, #7      ; ELSE ADD #07 to t
                                                            he Number
   38 0000002C         
   39 0000002C         LESS2
   40 0000002C F104 0430       ADD              R4, #0x30   ; ADD 30 to R3 if i
                                                            ts small
   41 00000030 700C            STRB             R4, [R1]    ; STORE DIGIT in AS
                                                            C 
   42 00000032         



ARM Macro Assembler    Page 2 


   43 00000032         STOP
   44 00000032 E7FE            B                STOP
   45 00000034         
   46 00000034 0000004C 
                       HEX     DCD              0x0000004C
   47 00000038 00000000 
              00000000         AREA             DATASEG, DATA, READWRITE
   48 00000000 00000000 
                       ASC     DCD              0           ;DST location in Da
                                                            ta segment
   49 00000004                 END
Command Line: --debug --xref --cpu=Cortex-M3 --apcs=interwork --depend=lab4_q1.
d -olab4_q1.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\
Inc\NXP\LPC17xx --predefine="__EVAL SETA 1" --list=lab4_q1.lst lab4_q1.asm



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

RESET 00000000

Symbol: RESET
   Definitions
      At line 1 in file lab4_q1.asm
   Uses
      None
Comment: RESET unused
__Vectors 00000000

Symbol: __Vectors
   Definitions
      At line 4 in file lab4_q1.asm
   Uses
      At line 2 in file lab4_q1.asm
Comment: __Vectors used once
2 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ENTRY 00000000

Symbol: ENTRY
   Definitions
      At line 10 in file lab4_q1.asm
   Uses
      None
Comment: ENTRY unused
HEX 00000034

Symbol: HEX
   Definitions
      At line 46 in file lab4_q1.asm
   Uses
      At line 15 in file lab4_q1.asm
Comment: HEX used once
LESS 00000012

Symbol: LESS
   Definitions
      At line 26 in file lab4_q1.asm
   Uses
      At line 23 in file lab4_q1.asm
Comment: LESS used once
LESS2 0000002C

Symbol: LESS2
   Definitions
      At line 39 in file lab4_q1.asm
   Uses
      At line 35 in file lab4_q1.asm
Comment: LESS2 used once
Reset_Handler 00000000

Symbol: Reset_Handler
   Definitions
      At line 13 in file lab4_q1.asm
   Uses
      At line 6 in file lab4_q1.asm
      At line 11 in file lab4_q1.asm

STOP 00000032

Symbol: STOP
   Definitions
      At line 43 in file lab4_q1.asm
   Uses
      At line 44 in file lab4_q1.asm
Comment: STOP used once
mycode 00000000

Symbol: mycode
   Definitions
      At line 9 in file lab4_q1.asm
   Uses
      None
Comment: mycode unused
7 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

ASC 00000000

Symbol: ASC
   Definitions
      At line 48 in file lab4_q1.asm
   Uses
      At line 16 in file lab4_q1.asm
Comment: ASC used once
DATASEG 00000000

Symbol: DATASEG
   Definitions
      At line 47 in file lab4_q1.asm
   Uses
      None
Comment: DATASEG unused
2 symbols
344 symbols in table
